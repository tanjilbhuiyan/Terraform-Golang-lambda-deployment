name: 'Golang Lambda Build and Deployment with S3'

on:
  push:
    branches: [ main ]
    paths:
      - 'github/**'
defaults:
    run:
     working-directory: github

jobs:
  Golang-lambda-build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout
      id: checkout_source_code
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
    - name: Setup Golang
      id: setup_golang
      uses: actions/setup-go@v3
      with:
            go-version: '>=1.17.0'
    - name: Setting up change file detection action
      id: changed-files-specific
      uses: tj-actions/changed-files@v39.2.1
      with:
        base_sha: ${{ steps.get-base-sha.outputs.base_sha }}
        files: |
          github/**/*.go
        json: "true"

    - name: Run step if any file(s) in the integration folder change
      if: steps.changed-files-specific.outputs.any_changed == 'true'
      run: |
        echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
        echo "${{ steps.changed-files-specific.outputs.all_changed_files }}" > list.txt
        cat list.txt

    - name: Setup Terraform
      id: Setting_up_terraform
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Adding workspace configuration in provider.tf
      id: Adding_workspace_configuration
      run: |
          echo "$TF_WORKSPACE" >> main.tf
      env:
        TF_WORKSPACE: ${{ vars.TF_WORKSPACE }}

    - name: Terraform Init
      id: Terraform_init
      run: terraform init

    - name: Terraform Plan
      id: Terraform_plan
      run: terraform plan -input=false -out=golang.tfplan

    - name: Terraform Apply
      id: Terraform_apply
      run: terraform apply -auto-approve -input=false "golang.tfplan"